#
# $Id: Jamfile.jam 2304 2010-10-20 16:50:47Z chambm $
#
#
# Original author: Matt Chambers <matt.chambers .@. vanderbilt.edu>
#
# Copyright 2011 Vanderbilt University - Nashville, TN 37232
#
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License.
#


import path ;

path-constant HDF_PATH : . ;

using zlib : 1.2.3 : $(ZLIB_SOURCE[1]) ;


alias H5pubconf.h : src/posix/H5pubconf.h : <include>src/posix : : <include>src/posix ;
alias H5pubconf.h : src/darwin/H5pubconf.h : <toolset>darwin <include>src/darwin : : <include>src/darwin ;
alias H5pubconf.h : src/windows/H5pubconf.h : <toolset>msvc <include>src/windows : : <include>src/windows ;


project
    : requirements
        <include>src
        <include>c++/src
        <use>H5pubconf.h
        <warnings>off
    : usage-requirements
        <include>src
        <include>c++/src
        <use>H5pubconf.h
    ;


exe H5detect : src/H5detect.c ;
actions make_init { "$(>[1]:P)/H5detect" > "$(<)" }
make H5Tinit.c : H5detect : @make_init ;

actions copy_libsettings { cp -f "$(>)" "$(<)" }
make libhdf5.settings : src/posix/libhdf5.settings : @copy_libsettings ;
make libhdf5.settings : src/darwin/libhdf5.settings : @copy_libsettings : <toolset>darwin ;

exe H5make_libsettings : src/H5make_libsettings.c ;
actions make_libsettings
{
    cd $(>[1]:P)
    "$(>[1]:P)/H5make_libsettings" > "$(<)"
}
make H5lib_settings.c : H5make_libsettings libhdf5.settings : @make_libsettings ;
make H5lib_settings.c : H5make_libsettings : @make_libsettings : <toolset>msvc ;


local .excluded-src = *szip.c *mpi*.c H5make_libsettings.c H5detect.c ;

local .posix_usage_defines = _LARGEFILE_SOURCE _LARGEFILE64_SOURCE _BSD_SOURCE ;
local .posix_build_defines = $(.posix_usage_defines) NDEBUG ;

rule link-requirements ( properties * )
{
    # HACK: <link>shared isn't being passed in properties like I'd expect, so I also check the command-line
    if <link>shared in $(properties) || link=shared in [ modules.peek : ARGV ]
    {
        return <library>/ext/boost//thread/<link>shared
               <library>/ext/zlib//z/<link>shared ;
    }
    else
    {
        return <library>/ext/boost//thread
               <library>/ext/zlib//z ;
    }
}

lib hdf5
    : # sources
        [ path.glob $(HDF_PATH)/src : *.c : H5FDwindows.c $(.excluded-src) ]
        H5Tinit.c
        H5lib_settings.c
    : # requirements
        <define>$(.posix_build_defines)
        <define>_POSIX_SOURCE
        <cflags>-std=c99
    : # default-build
    : # usage-requirements
        <define>$(.posix_usage_defines)   
    ;

lib hdf5
    : # sources
        [ path.glob $(HDF_PATH)/src : *.c : H5FDwindows.c $(.excluded-src) ]
        H5Tinit.c
        H5lib_settings.c
    : # requirements
        <toolset>darwin
        <define>$(.posix_build_defines)
        <cflags>
    : # default-build
    : # usage-requirements
        <define>$(.posix_usage_defines)   
    ;

lib hdf5
    : # sources
        [ path.glob $(HDF_PATH)/src : *.c : H5FDwindows.c $(.excluded-src) ]
        H5Tinit.c
        H5lib_settings.c
    : # requirements
        <toolset>clang
        <define>$(.posix_build_defines)
        <cflags>
    : # default-build
    : # usage-requirements
        <define>$(.posix_usage_defines)
    ;

lib hdf5
    : # sources
        [ path.glob $(HDF_PATH)/src : *.c : H5FDdirect.c $(.excluded-src) ]
        H5Tinit.c
        H5lib_settings.c
        $(HDF_PATH)/src/init_once_workaround.cpp
    : # requirements
        <toolset>msvc
        <conditional>@link-requirements
    : # default-build
    : # usage-requirements
        <conditional>@link-requirements
    ;

lib hdf5pp
    : # sources
        [ path.glob $(HDF_PATH)/c++/src : *.cpp ]
    : # requirements
        <library>hdf5
    : # default-build
    : # usage-requirements
        <library>hdf5
    ;
